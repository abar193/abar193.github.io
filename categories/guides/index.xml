<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>guides on Mr. Abar</title>
    <link>https://mrabar.me/categories/guides/</link>
    <description>Recent content in guides on Mr. Abar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 31 Oct 2021 21:10:13 +0200</lastBuildDate><atom:link href="https://mrabar.me/categories/guides/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Legacy migration: custom request handling in Spring Web</title>
      <link>https://mrabar.me/posts/legacy_handling/</link>
      <pubDate>Sun, 31 Oct 2021 21:10:13 +0200</pubDate>
      
      <guid>https://mrabar.me/posts/legacy_handling/</guid>
      <description>Intro If one day you woke up with the feeling, that the standard Spring Web handlers are lacking functionality and you want to extend it yourself, then look no further. This article is for you, and I hope it will be helpful.
Example Consider the scenario: you have an old legacy project full of heavy domain logic and questionable technical solutions. Logic is grouped by so called modules, each module may have one or several action.</description>
    </item>
    
    <item>
      <title>Running manual Cucumber tests in Java</title>
      <link>https://mrabar.me/posts/manual-cucumber/</link>
      <pubDate>Fri, 06 Jul 2018 10:00:00 +0300</pubDate>
      
      <guid>https://mrabar.me/posts/manual-cucumber/</guid>
      <description>In theory, it would be nice to have everything automated. In reality, it might be the case that for some reasons you have to run and manually verify test results.
There can be a number of ways for running manual Cucumber tests, for Ruby there&amp;rsquo;s even whole CukeHub to run and organize manual tests, but my research yielded no results on how to do manual testing in Java.
So, let&amp;rsquo;s implement it our self.</description>
    </item>
    
  </channel>
</rss>
