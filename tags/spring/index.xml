<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spring on Mr. Abar</title>
    <link>https://mrabar.me/tags/spring/</link>
    <description>Recent content in spring on Mr. Abar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 06 Dec 2020 16:41:04 +0200</lastBuildDate><atom:link href="https://mrabar.me/tags/spring/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Joker 2020. Days 3 &amp; 4.</title>
      <link>https://mrabar.me/posts/joker-2020-2/</link>
      <pubDate>Sun, 06 Dec 2020 16:41:04 +0200</pubDate>
      
      <guid>https://mrabar.me/posts/joker-2020-2/</guid>
      <description>Hidden pearls for high-performance-persistence in Java Presented by Sven Ruppert - DevSecOps from JFrog.
Presentation was pre-recorder, but the questions were live.
Why and what: Inside of JVM, for different areas - from embedded, to terabyte-big document storage systems, but scaling and tuning ways of storing data.
You can&amp;rsquo;t get rid of the persistence layer, but there are three solutions as the beginning of making optimization.
JOOQ: a tool for mapping SQL to Java DSL - SQL style, generated from the DB schema.</description>
    </item>
    
    <item>
      <title>Joker 2020. Days 1 &amp; 2.</title>
      <link>https://mrabar.me/posts/joker-2020-1/</link>
      <pubDate>Sun, 29 Nov 2020 16:41:04 +0200</pubDate>
      
      <guid>https://mrabar.me/posts/joker-2020-1/</guid>
      <description>Spring: Your next Java microframework Presented by Alexey Nesterov. First time presented in the Russian language.
Using Spring as micro-framework. Microframework: often is specifically designed for building the APIs for another service or application. In microframeworks, people typically seek ease of development, speed, simplicity, cloud-readiness (cloud-native).
Spring easy.
(&amp;hellip;to develop)
Autoconfigs, profiles, etc. No Livereload? There is livereload for Spring! Spring Boot Dev Tools: livereload, works even remotely + tons of other features.</description>
    </item>
    
  </channel>
</rss>
